module(
    name = "testing",
)

# Bazel's canonical dependencies
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")

# C++
bazel_dep(name = "abseil-cpp", version = "20250127.0")
bazel_dep(name = "googletest", version = "1.15.2")
bazel_dep(name = "google_benchmark", version = "1.9.1")

# C++ toolchain configuration
cc_toolchain_config = use_extension("@bazel_tools//tools/cpp:cc_toolchain_config.bzl", "cc_toolchain_config")
cc_toolchain_config.toolchain(
    name = "cc-toolchain",
    compiler = "clang",
    compiler_version = "14.0",
    cxx_standard = "c++17",
    target_cpu = "darwin_arm64",
)
use_repo(cc_toolchain_config)

# Hedron's Compile Commands Extractor for Bazel
bazel_dep(name = "hedron_compile_commands", version = "0.0.0", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "0e990032f3c5a866e72615cf67e5ce22186dcb97",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

# TypeScript
bazel_dep(name = "aspect_rules_js", version = "2.1.3")
bazel_dep(name = "rules_nodejs", version = "6.3.3")
bazel_dep(name = "aspect_bazel_lib", version = "2.9.3")

# Jest testing
bazel_dep(name = "aspect_rules_jest", version = "0.22.0")

node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "20.9.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    no_optional = False,
    pnpm_lock = "//ts:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
pnpm.pnpm(
    name = "pnpm",
    pnpm_version = "9.12.1",
)
use_repo(pnpm, "pnpm")

bazel_dep(name = "aspect_rules_esbuild", version = "0.21.0")
bazel_dep(name = "aspect_rules_ts", version = "3.5.0")

rules_ts_ext = use_extension("@aspect_rules_ts//ts:extensions.bzl", "ext", dev_dependency = True)
rules_ts_ext.deps(
    ts_version_from = "//ts:package.json",
)
use_repo(rules_ts_ext, "npm_typescript")